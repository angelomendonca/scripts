#!/usr/bin/env python
"""NSCA Notify
    A simple script that wraps a shell command and then uses send_nsca to report success or failure.
    Works only with nagios services not hosts
"""

import subprocess
import sys

SEND_NSCA = '/usr/sbin/send_nsca'

def main(argv=None):
    if argv is None:
        argv = sys.argv
    if len(argv) < 5:
        print "Usage: %s <nsca_server> <service host> <service name> <shell command to run>" % argv[0]
        sys.exit(1)

    nsca_server = argv[1]
    service_host = argv[2]
    service_name = argv[3]
    shell_cmd = argv[4:]

    #Run the shell command checking output and only sending the first line of ouput to nsca
    cmd = subprocess.Popen(' '.join(shell_cmd), stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True)
    cmd.wait()
    out = cmd.stdout.readline()

    #run send_nsca
    msg = "%s\t%s\t%d\t%s\n" % (service_host, service_name, cmd.returncode, out)
    nsca = subprocess.Popen([SEND_NSCA, '-H', nsca_server], stdin=subprocess.PIPE, stdout=subprocess.PIPE, \
        stderr=subprocess.STDOUT)
    nsca.communicate(msg)
    if nsca.returncode != 0:
        print 'ERROR: % failed with returncode %d and ouput:\n%s' % (SEND_NSCA, nsca.returncode, nsca.stdout)

if __name__ == "__main__":
    sys.exit(main())
